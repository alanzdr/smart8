{"version":3,"sources":["assets/icons/send-icon.svg","assets/fonts/GothamBook.ttf","components/Logo/index.js","services/api.js","utils/message.js","contexts/messages.js","components/Messages/index.js","components/Input/index.js","App.js","index.js"],"names":["module","exports","Logo","id","xmlns","viewBox","width","height","rx","cx","cy","r","d","className","x","y","api","axios","create","baseURL","process","messages","affirmative","negative","getRamdomMessage","key","messageArray","Math","floor","random","length","MessageContext","createContext","MessageProvider","children","useState","setMessages","loading","setLoading","Provider","value","useMessage","useContext","GenerateRandomKey","toString","substring","getResponse","text","a","get","params","result","botResult","data","displayName","botMessage","exempleMessage","status","target","onUpdateMessages","newMessage","values","map","item","i","sendMessage","message","botResponse","Messages","Input","setMessage","onSendMessage","ev","preventDefault","onSubmit","type","placeholder","onChange","onClick","src","sendIcon","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0dd5b84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/send-icon.544a5860.svg\";","module.exports = __webpack_public_path__ + \"static/media/GothamBook.b54724f5.ttf\";","import React from 'react'\r\n\r\nimport './styles.css'\r\n\r\nexport default function Logo () {\r\n  return (\r\n    <div id=\"content-logo\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 73.1 73.1\">\r\n        <rect width=\"73.1\" height=\"73.1\" rx=\"19\"/>\r\n        <circle cx=\"36.43\" cy=\"36.36\" r=\"17.44\"/>\r\n        <g>\r\n          <path d=\"M29.49,39.5v0c0-2.12,1.25-3.42,3.15-4.2a4.19,4.19,0,0,1-2.55-3.8V31.4c0-2.87,2.87-4.9,7-4.9s7,2,7,4.9v.05a4.19,4.19,0,0,1-2.55,3.8c1.78.73,3.15,2,3.15,4.2v0c0,3-3.1,5.15-7.62,5.15S29.49,42.52,29.49,39.5Zm9.65-.65V38.8a1.81,1.81,0,0,0-2-1.7,1.81,1.81,0,0,0-2,1.7v.05a1.81,1.81,0,0,0,2,1.75A1.84,1.84,0,0,0,39.14,38.85Zm-.2-6.67v0a1.83,1.83,0,0,0-3.65,0v0a1.83,1.83,0,0,0,3.65,0Z\"/>\r\n        </g>\r\n        <rect className=\"top-eye\" x=\"11.43\" y=\"17.92\" width=\"50\" height=\"1\"/>\r\n        <rect className=\"bot-eye\" x=\"11.55\" y=\"53.8\" width=\"50\" height=\"1\"/>\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'https://us-central1-smart8.cloudfunctions.net/question_classification_backend'\r\n})\r\n\r\nexport default api\r\n","const messages = {\r\n  affirmative: [\r\n    'It is certain.',\r\n    'It is decidedly so.',\r\n    'Without a doubt.',\r\n    'Yes – definitely.',\r\n    'You may rely on it.',\r\n    'As I see it, yes.',\r\n    'Most likely.',\r\n    'Outlook good.',\r\n    'Yes.',\r\n    'Signs point to yes.'\r\n  ],\r\n  negative: [\r\n    \"Don't count on it.\",\r\n    'My reply is no.',\r\n    'My sources say no.',\r\n    'Outlook not so good.',\r\n    'Very doubtful.'\r\n  ],\r\n  'non-committal': [\r\n    'Reply hazy, try again.',\r\n    'Ask again later.',\r\n    'Better not tell you now.',\r\n    'Cannot predict now.',\r\n    'Concentrate and ask again.'\r\n  ]\r\n}\r\n\r\nexport const getRamdomMessage = (key) => {\r\n  const messageArray = messages[key]\r\n  return messageArray[Math.floor(Math.random() * messageArray.length)]\r\n}\r\n","import React, {\r\n  createContext,\r\n  useState,\r\n  useContext\r\n} from 'react'\r\n\r\nimport api from '../services/api'\r\n\r\nimport { getRamdomMessage } from '../utils/message'\r\n\r\nconst INITIAL_STATE = {\r\n  messages: []\r\n}\r\n\r\nexport const MessageContext = createContext(INITIAL_STATE)\r\n\r\n// eslint-disable-next-line react/prop-types\r\nexport const MessageProvider = ({ children }) => {\r\n  const [messages, setMessages] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  return (\r\n    <MessageContext.Provider value={{\r\n      messages,\r\n      setMessages,\r\n      loading,\r\n      setLoading\r\n    }}>\r\n      {children}\r\n    </MessageContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useMessage = () => {\r\n  const {\r\n    messages,\r\n    setMessages,\r\n    loading,\r\n    setLoading\r\n  } = useContext(MessageContext)\r\n\r\n  const GenerateRandomKey = () => {\r\n    return Math.random().toString(36).substring(7)\r\n  }\r\n\r\n  const getResponse = async (text) => {\r\n    const result = await api.get('/', {\r\n      params: { text }\r\n    })\r\n\r\n    const botResult = result.data.displayName\r\n    const botMessage = getRamdomMessage(botResult)\r\n\r\n    const exempleMessage = {\r\n      key: GenerateRandomKey(),\r\n      status: 'visible',\r\n      target: 'bot',\r\n      text: botMessage\r\n    }\r\n\r\n    return exempleMessage\r\n  }\r\n\r\n  const onUpdateMessages = (messages, newMessage) => {\r\n    const { length } = messages\r\n    const values = messages.map((item, i) => {\r\n      if (length > 3 && i <= length - 4) {\r\n        return { ...item, status: 'hidden' }\r\n      }\r\n      return item\r\n    })\r\n    return [...values, newMessage]\r\n  }\r\n\r\n  const sendMessage = async (text) => {\r\n    const message = {\r\n      key: GenerateRandomKey(),\r\n      status: 'visible',\r\n      target: 'user',\r\n      text\r\n    }\r\n    setMessages((messages) => onUpdateMessages(messages, message))\r\n    setLoading(true)\r\n    const botResponse = await getResponse(text)\r\n    setMessages((messages) => onUpdateMessages(messages, botResponse))\r\n    setLoading(false)\r\n  }\r\n\r\n  return {\r\n    loading,\r\n    messages,\r\n    sendMessage\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nimport { useMessage } from '../../contexts/messages'\r\n\r\nimport './styles.css'\r\n\r\nexport default function Messages () {\r\n  const { messages, loading } = useMessage()\r\n  return (\r\n    <div id='messages-container'>\r\n      {messages.map(message => (\r\n        <div\r\n          key={message.key}\r\n          className={`message ${message.status} ${message.target}`}\r\n        >\r\n          <p>{message.text}</p>\r\n        </div>\r\n      ))}\r\n      {loading ? (\r\n        <div\r\n          className={'message bot'}\r\n        >\r\n          <p>...</p>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport { useMessage } from '../../contexts/messages'\r\n\r\nimport './styles.css'\r\nimport sendIcon from '../../assets/icons/send-icon.svg'\r\n\r\nexport default function Input () {\r\n  const [message, setMessage] = useState('')\r\n  const { sendMessage, loading } = useMessage()\r\n\r\n  const onSendMessage = (ev) => {\r\n    if (ev) {\r\n      ev.preventDefault()\r\n    }\r\n    if (!loading && message.length > 1) {\r\n      sendMessage(message)\r\n      setMessage('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSendMessage} id='messages-input'>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type text...\"\r\n        value={message}\r\n        onChange={(ev) => setMessage(ev.target.value)}\r\n      />\r\n      <button\r\n        type='button'\r\n        onClick={onSendMessage}\r\n      >\r\n        <img src={sendIcon} alt=\"Send\"/>\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n","import React from 'react'\n\nimport Logo from './components/Logo'\nimport Messages from './components/Messages'\nimport Input from './components/Input'\n\nimport { MessageProvider } from './contexts/messages'\n\nimport './assets/fonts/GothamBook.ttf'\nimport './index.css'\n\nexport default function App () {\n  return (\n    <MessageProvider>\n      <div id=\"site-container\">\n        <Logo />\n        <Messages />\n        <Input />\n      </div>\n    </MessageProvider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}